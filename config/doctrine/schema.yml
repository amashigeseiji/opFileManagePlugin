options:
  charset: utf8
 
ManagedFile:
  actAs: [Timestampable]
  columns:
    id: { type: integer(4), primary: true, autoincrement: true }
    member_id: { type: integer(4), notnull: true }
    name: { type: string, notnull: true }
    file_id: { type: integer(4), notnull: true }
    directory_id: { type: integer(4), notnull: true }
  relations:
    Member:
      foreignAlias: ManagedFiles
      local: member_id
      foreign: id
      type: one
      foreignType: many
      onDelete: cascade
    File:
      local: file_id
      foreign: id
      type: one
      foreignType: one
      onDelete: cascade
    FileDirectory:
      foreignAlias: ManagedFiles
      local: directory_id
      foreign: id
      type: one
      foreignType: many
      onDelete: cascade

FileDirectory:
  actAs: [Timestampable]
  columns:
    id: { type: integer(4), primary: true, autoincrement: true }
    member_id: { type: integer(4), notnull: true }
    name: { type: string(64), notnull: true }
    type: { type: string(64), notnull: true, default: 'public' }
  relations:
    Member:
      foreignAlias: ManagedFileDirectories
      local: member_id
      foreign: id
      type: one
      foreignType: many
      onDelete: cascade

DirectoryConfig:
  columns:
    id: { type: integer(4), primary: true, autoincrement: true }
    directory_id: { type: integer(4), notnull: true }
    community_id: { type: integer(4) }
  relations:
    FileDirectory:
      local: directory_id
      foreign: id
      type: one
      foreignType: many
      onDelete: cascade
    Community:
      local: community_id
      foreign: id
      onDelete: cascade
    indexes:
      directory_id_community_id_UNIQUE:
        fields: [ directory_id, community_id ]
        type: unique
